[
  {
    "objectID": "Full_Stack/project5.html",
    "href": "Full_Stack/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 5"
    ]
  },
  {
    "objectID": "Full_Stack/project4.html",
    "href": "Full_Stack/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 4"
    ]
  },
  {
    "objectID": "Full_Stack/project3.html",
    "href": "Full_Stack/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project5.html",
    "href": "Cleansing_Exploration/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project4.html",
    "href": "Cleansing_Exploration/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project3.html",
    "href": "Cleansing_Exploration/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "cleansing.html",
    "href": "cleansing.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "cleansing.html#title-2-header",
    "href": "cleansing.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Cleansing"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project1.html",
    "href": "Cleansing_Projects/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project2.html",
    "href": "Cleansing_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/project5.html",
    "href": "Story_Telling/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 5"
    ]
  },
  {
    "objectID": "Story_Telling/project4.html",
    "href": "Story_Telling/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 4"
    ]
  },
  {
    "objectID": "Story_Telling/project3.html",
    "href": "Story_Telling/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 3"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "index.html#title-2-header",
    "href": "index.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics"
  },
  {
    "objectID": "Machine_Learning/project1.html",
    "href": "Machine_Learning/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 1"
    ]
  },
  {
    "objectID": "Machine_Learning/project2.html",
    "href": "Machine_Learning/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 2"
    ]
  },
  {
    "objectID": "ml.html",
    "href": "ml.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "ml.html#title-2-header",
    "href": "ml.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Machine Learning"
    ]
  },
  {
    "objectID": "story_telling.html",
    "href": "story_telling.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "story_telling.html#title-2-header",
    "href": "story_telling.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Story Telling"
    ]
  },
  {
    "objectID": "Competition/project5.html",
    "href": "Competition/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 5"
    ]
  },
  {
    "objectID": "Competition/project4.html",
    "href": "Competition/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 4"
    ]
  },
  {
    "objectID": "Competition/project3.html",
    "href": "Competition/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 3"
    ]
  },
  {
    "objectID": "Competition/project2.html",
    "href": "Competition/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 2"
    ]
  },
  {
    "objectID": "Competition/project1.html",
    "href": "Competition/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Competition",
      "Project 1"
    ]
  },
  {
    "objectID": "competition.html",
    "href": "competition.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "competition.html#title-2-header",
    "href": "competition.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Competition"
    ]
  },
  {
    "objectID": "exploration.html",
    "href": "exploration.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "exploration.html#title-2-header",
    "href": "exploration.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Data Exploration"
    ]
  },
  {
    "objectID": "Machine_Learning/project3.html",
    "href": "Machine_Learning/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 3"
    ]
  },
  {
    "objectID": "Machine_Learning/project4.html",
    "href": "Machine_Learning/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 4"
    ]
  },
  {
    "objectID": "Machine_Learning/project5.html",
    "href": "Machine_Learning/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Machine Learning",
      "Project 5"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Physicist, Mathematician, Cambridge professor.\n\nisaac@applesdofall.org | My wikipedia page\n\n\n\nStanding on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples.\n\n\n\n\n1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow\n\n\n\n\n2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France\n\n\n\n\n\n\n1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001\n\n\n\n\n1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Standing on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples."
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "Story_Telling/project2.html",
    "href": "Story_Telling/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 2"
    ]
  },
  {
    "objectID": "Story_Telling/project1.html",
    "href": "Story_Telling/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Story Telling",
      "Project 1"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project3.html",
    "href": "Cleansing_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 3"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project4.html",
    "href": "Cleansing_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 4"
    ]
  },
  {
    "objectID": "Cleansing_Projects/project5.html",
    "href": "Cleansing_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Data Cleansing",
      "Project 5"
    ]
  },
  {
    "objectID": "full_stack.html",
    "href": "full_stack.html",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "full_stack.html#title-2-header",
    "href": "full_stack.html#title-2-header",
    "title": "about me",
    "section": "",
    "text": "MarkDown Basics",
    "crumbs": [
      "Full Stack"
    ]
  },
  {
    "objectID": "Cleansing_Exploration/project2.html",
    "href": "Cleansing_Exploration/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Cleansing_Exploration/project1.html",
    "href": "Cleansing_Exploration/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top"
  },
  {
    "objectID": "notebooks/starter_bank.html",
    "href": "notebooks/starter_bank.html",
    "title": "Alvin Charles - Data Science Portfolio",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import (\n    classification_report, confusion_matrix, accuracy_score, roc_auc_score\n)\nimport matplotlib.pyplot as plt\nimport pickle\n\n\n\nurl_train = \"https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bank.csv\"\ndata = pd.read_csv(url_train, sep=\",\")\n\ndata.columns = data.columns.str.strip()\n\nprint(\"✅ Data loaded successfully.\")\nprint(\"Shape:\", data.shape)\nprint(\"Columns:\", data.columns.tolist())\n\n✅ Data loaded successfully.\nShape: (37069, 20)\nColumns: ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'day_of_week', 'campaign', 'pdays', 'previous', 'poutcome', 'emp.var.rate', 'cons.price.idx', 'cons.conf.idx', 'euribor3m', 'nr.employed', 'y']\n\n\n\n\nlabel_enc = LabelEncoder()\n\nfor col in data.select_dtypes(include=[\"object\"]).columns:\n    if col != \"y\":\n        data[col] = label_enc.fit_transform(data[col])\n\ndata[\"y\"] = data[\"y\"].map({\"yes\": 1, \"no\": 0})\n\nX = data.drop(\"y\", axis=1)\ny = data[\"y\"]\n\nprint(\"✅ Encoding complete.\")\nprint(\"Feature matrix shape:\", X.shape)\nprint(\"Target vector shape:\", y.shape)\n\n✅ Encoding complete.\nFeature matrix shape: (37069, 19)\nTarget vector shape: (37069,)\n\n\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42, stratify=y\n)\n\nprint(\"Training size:\", X_train.shape)\nprint(\"Testing size:\", X_test.shape)\n\nTraining size: (29655, 19)\nTesting size: (7414, 19)\n\n\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_auc_score\nfrom sklearn.model_selection import cross_val_score\nimport matplotlib.pyplot as plt\nimport pickle\n\nrf = RandomForestClassifier(\n    n_estimators=200,\n    max_depth=10,\n    min_samples_leaf=25,\n    random_state=42,\n    n_jobs=-1\n)\nrf.fit(X_train, y_train)\n\nRandomForestClassifier(max_depth=10, min_samples_leaf=25, n_estimators=200,\n                       n_jobs=-1, random_state=42)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.RandomForestClassifier?Documentation for RandomForestClassifieriFittedRandomForestClassifier(max_depth=10, min_samples_leaf=25, n_estimators=200,\n                       n_jobs=-1, random_state=42) \n\n\n\ncv_scores = cross_val_score(rf, X_train, y_train, cv=5, scoring=\"accuracy\")\nprint(f\"✅ Cross-Validation Accuracy (mean of 5 folds): {cv_scores.mean():.4f}\")\n\n✅ Cross-Validation Accuracy (mean of 5 folds): 0.9005\n\n\n\ny_pred = rf.predict(X_test)\nacc = accuracy_score(y_test, y_pred)\nroc = roc_auc_score(y_test, rf.predict_proba(X_test)[:, 1])\n\nprint(f\"✅ Test Accuracy: {acc:.4f}\")\nprint(f\"✅ ROC-AUC Score: {roc:.4f}\")\nprint(\"\\nConfusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\nprint(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred))\n\n✅ Test Accuracy: 0.8987\n✅ ROC-AUC Score: 0.8032\n\nConfusion Matrix:\n [[6461  111]\n [ 640  202]]\n\nClassification Report:\n               precision    recall  f1-score   support\n\n           0       0.91      0.98      0.95      6572\n           1       0.65      0.24      0.35       842\n\n    accuracy                           0.90      7414\n   macro avg       0.78      0.61      0.65      7414\nweighted avg       0.88      0.90      0.88      7414\n\n\n\n\nwith open(\"bank_rf_model.pkl\", \"wb\") as f:\n    pickle.dump(rf, f, protocol=5)\nprint(\"✅ Model saved as bank_rf_model.pkl\")\n\n✅ Model saved as bank_rf_model.pkl\n\n\n\nfeat_importances = pd.Series(rf.feature_importances_, index=X.columns)\nfeat_importances.nlargest(10).plot(kind=\"barh\", figsize=(8,5))\nplt.title(\"Top 10 Most Important Features (Random Forest)\")\nplt.xlabel(\"Importance Score\")\nplt.ylabel(\"Feature\")\nplt.show()\n\n\n\n\n\n\n\n\n\nurl_holdout = \"https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bank_holdout_test.csv\"\nholdout = pd.read_csv(url_holdout, sep=\",\")\n\nholdout.columns = holdout.columns.str.strip()\n\nfrom sklearn.preprocessing import LabelEncoder\nlabel_enc = LabelEncoder()\n\nfor col in holdout.select_dtypes(include=[\"object\"]).columns:\n    holdout[col] = label_enc.fit_transform(holdout[col])\n\npreds = rf.predict(holdout)\n\noutput = pd.DataFrame({\"predictions\": preds})\noutput.to_csv(\"predictions.csv\", index=False)\n\nprint(f\"✅ predictions.csv created with {len(output)} rows.\")\ndisplay(output.head())\n\n✅ predictions.csv created with 4119 rows.\n\n\n\n    \n\n\n\n\n\n\npredictions\n\n\n\n\n0\n0\n\n\n1\n0\n\n\n2\n1\n\n\n3\n0\n\n\n4\n0\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n    \n      \n\n\n    \n        \n    \n\n      \n\n\n\n      \n    \n\n    \n  \n\n\n\nmarital_day = data.groupby([\"marital\", \"day_of_week\"])[\"y\"].mean().sort_values(ascending=False)\nprint(marital_day)\n\njob_response = data.groupby(\"job\")[\"y\"].mean().sort_values(ascending=False)\nprint(job_response)\n\nmarital  day_of_week\n3        4              0.181818\n         0              0.166667\n         2              0.166667\n2        2              0.153208\n         3              0.148560\n         0              0.146217\n         4              0.137181\n         1              0.117874\n3        1              0.117647\n0        3              0.112529\n1        2              0.112267\n0        4              0.111940\n1        4              0.109325\n         3              0.105073\n0        2              0.105006\n         1              0.102593\n         0              0.098425\n1        0              0.093823\n         1              0.090540\n3        3              0.000000\nName: y, dtype: float64\njob\n8     0.313997\n5     0.252282\n10    0.146769\n0     0.131277\n11    0.119048\n4     0.114426\n9     0.108638\n6     0.107535\n3     0.099792\n2     0.086391\n7     0.082582\n1     0.068195\nName: y, dtype: float64\n\n\n\nimport matplotlib.pyplot as plt\n\ncampaign_effect = data.groupby(\"campaign\")[\"y\"].mean()\ncampaign_effect.plot(kind=\"line\", marker=\"o\", title=\"Success Rate vs. Number of Contacts\")\nplt.xlabel(\"Number of Contacts in Campaign\")\nplt.ylabel(\"Subscription Rate\")\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nmarital_response = data.groupby(\"marital\")[\"y\"].mean().sort_values(ascending=False)\n\nmarital_map = {\n    0: \"Divorced\",\n    1: \"Married\",\n    2: \"Single\",\n    3: \"Unknown\"\n}\nmarital_response.index = marital_response.index.map(marital_map)\n\nplt.figure(figsize=(7,5))\nsns.barplot(x=marital_response.index, y=marital_response.values, palette=\"crest\")\n\nplt.title(\"💍 Subscription Rate by Marital Status\", fontsize=14, weight='bold')\nplt.xlabel(\"Marital Status\", fontsize=12)\nplt.ylabel(\"Average Subscription Rate\", fontsize=12)\n\nfor i, val in enumerate(marital_response.values):\n    plt.text(i, val + 0.002, f\"{val*100:.2f}%\", ha='center', va='bottom', fontsize=10, weight='bold')\n\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\nplt.show()\n\nprint(marital_response)\n\n\n/tmp/ipython-input-2049381768.py:18: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=marital_response.index, y=marital_response.values, palette=\"crest\")\n/tmp/ipython-input-2049381768.py:30: UserWarning: Glyph 128141 (\\N{RING}) missing from font(s) DejaVu Sans.\n  plt.tight_layout()\n/usr/local/lib/python3.12/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 128141 (\\N{RING}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\nmarital\nSingle      0.140730\nUnknown     0.130435\nDivorced    0.106193\nMarried     0.102200\nName: y, dtype: float64\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsingle_data = data[data[\"marital\"] == 2]\n\nsingle_day_response = single_data.groupby(\"day_of_week\")[\"y\"].mean().sort_index()\n\nday_labels = {0: \"Mon\", 1: \"Tue\", 2: \"Wed\", 3: \"Thu\", 4: \"Fri\"}\nsingle_day_response.index = single_day_response.index.map(day_labels)\n\nplt.figure(figsize=(8,5))\nsns.barplot(x=single_day_response.index, y=single_day_response.values, palette=\"mako\")\n\nplt.title(\"📅 Subscription Rate by Day of the Week (Single Customers)\", fontsize=14, weight='bold')\nplt.xlabel(\"Day of the Week\", fontsize=12)\nplt.ylabel(\"Average Subscription Rate\", fontsize=12)\n\nfor i, val in enumerate(single_day_response.values):\n    plt.text(i, val + 0.002, f\"{val*100:.2f}%\", ha='center', va='bottom', fontsize=10, weight='bold')\n\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\nplt.show()\n\nprint(single_day_response)\n\n/tmp/ipython-input-2196252494.py:16: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=single_day_response.index, y=single_day_response.values, palette=\"mako\")\n/tmp/ipython-input-2196252494.py:28: UserWarning: Glyph 128197 (\\N{CALENDAR}) missing from font(s) DejaVu Sans.\n  plt.tight_layout()\n/usr/local/lib/python3.12/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 128197 (\\N{CALENDAR}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\nday_of_week\nMon    0.146217\nTue    0.117874\nWed    0.153208\nThu    0.148560\nFri    0.137181\nName: y, dtype: float64\n\n\n\nday_counts = data[\"day_of_week\"].value_counts().sort_index()\n\nday_labels = {0: \"Mon\", 1: \"Tue\", 2: \"Wed\", 3: \"Thu\", 4: \"Fri\"}\nday_counts.index = day_counts.index.map(day_labels)\n\nprint(\"📅 Number of records per day of the week:\")\nprint(day_counts)\n\nprint(\"\\nUnique days present in dataset:\", data[\"day_of_week\"].unique())\n\n📅 Number of records per day of the week:\nday_of_week\nMon    7036\nTue    7657\nWed    7742\nThu    7287\nFri    7347\nName: count, dtype: int64\n\nUnique days present in dataset: [1 3 4 2 0]\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\njob_response = data.groupby(\"job\")[\"y\"].mean().sort_values(ascending=False)\n\n\njob_map = {\n    0: \"Admin.\",\n    1: \"Blue-Collar\",\n    2: \"Entrepreneur\",\n    3: \"Housemaid\",\n    4: \"Management\",\n    5: \"Retired\",\n    6: \"Self-Employed\",\n    7: \"Services\",\n    8: \"Student\",\n    9: \"Technician\",\n    10: \"Unemployed\",\n    11: \"Unknown\"\n}\njob_response.index = job_response.index.map(job_map)\n\nplt.figure(figsize=(10,6))\nsns.barplot(x=job_response.values, y=job_response.index, palette=\"crest\")\n\nplt.title(\"💼 Subscription Rate by Profession\", fontsize=15, weight='bold')\nplt.xlabel(\"Average Subscription Rate\", fontsize=12)\nplt.ylabel(\"Profession\", fontsize=12)\n\nfor i, val in enumerate(job_response.values):\n    plt.text(val + 0.002, i, f\"{val*100:.2f}%\", va='center', fontsize=10, weight='bold')\n\nplt.grid(axis=\"x\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\nplt.show()\n\nprint(job_response)\n\n/tmp/ipython-input-570481752.py:27: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=job_response.values, y=job_response.index, palette=\"crest\")\n/tmp/ipython-input-570481752.py:39: UserWarning: Glyph 128188 (\\N{BRIEFCASE}) missing from font(s) DejaVu Sans.\n  plt.tight_layout()\n/usr/local/lib/python3.12/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 128188 (\\N{BRIEFCASE}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\njob\nStudent          0.313997\nRetired          0.252282\nUnemployed       0.146769\nAdmin.           0.131277\nUnknown          0.119048\nManagement       0.114426\nTechnician       0.108638\nSelf-Employed    0.107535\nHousemaid        0.099792\nEntrepreneur     0.086391\nServices         0.082582\nBlue-Collar      0.068195\nName: y, dtype: float64\n\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nstudents = data[data[\"job\"] == 8]\n\nstudent_day_response = students.groupby(\"day_of_week\")[\"y\"].mean().sort_index()\n\nday_labels = {0: \"Mon\", 1: \"Tue\", 2: \"Wed\", 3: \"Thu\", 4: \"Fri\"}\nstudent_day_response.index = student_day_response.index.map(day_labels)\n\nplt.figure(figsize=(7,5))\nsns.barplot(x=student_day_response.index, y=student_day_response.values, palette=\"viridis\")\n\nplt.title(\"🎓 Subscription Rate by Day of the Week (Students)\", fontsize=14, weight='bold')\nplt.xlabel(\"Day of the Week\", fontsize=12)\nplt.ylabel(\"Average Subscription Rate\", fontsize=12)\n\nfor i, val in enumerate(student_day_response.values):\n    plt.text(i, val + 0.002, f\"{val*100:.2f}%\", ha='center', va='bottom', fontsize=10, weight='bold')\n\nplt.grid(axis=\"y\", linestyle=\"--\", alpha=0.6)\nplt.tight_layout()\nplt.show()\n\nprint(\"Average subscription rate by day (students only):\")\nprint(student_day_response)\n\n/tmp/ipython-input-4051878152.py:16: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=student_day_response.index, y=student_day_response.values, palette=\"viridis\")\n/tmp/ipython-input-4051878152.py:28: UserWarning: Glyph 127891 (\\N{GRADUATION CAP}) missing from font(s) DejaVu Sans.\n  plt.tight_layout()\n/usr/local/lib/python3.12/dist-packages/IPython/core/pylabtools.py:151: UserWarning: Glyph 127891 (\\N{GRADUATION CAP}) missing from font(s) DejaVu Sans.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\n\n\nAverage subscription rate by day (students only):\nday_of_week\nMon    0.335664\nTue    0.256250\nWed    0.314917\nThu    0.333333\nFri    0.333333\nName: y, dtype: float64\n\n\n\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\n\ntest = pd.read_csv(\"https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bank_holdout_test.csv\", sep=\",\")\n\ntest.columns = test.columns.str.strip()\n\nprint(\"✅ Holdout data loaded successfully.\")\nprint(\"Shape:\", test.shape)\nprint(\"Columns:\", test.columns.tolist())\n\nlabel_enc = LabelEncoder()\n\nfor col in test.select_dtypes(include=[\"object\"]).columns:\n    test[col] = label_enc.fit_transform(test[col])\n\nprint(\"✅ Encoding complete on test data.\")\n\npredictions = rf.predict(test)\n\nmy_predictions = pd.DataFrame(predictions, columns=[\"predictions\"])\n\nmy_predictions.to_csv(\"team8-module2-predictions.csv\", index=False)\n\nprint(\"✅ CSV file created successfully!\")\nprint(\"File preview:\")\nprint(my_predictions.head())\n\nprint(\"\\nNumber of predictions:\", len(my_predictions))\n\n✅ Holdout data loaded successfully.\nShape: (4119, 19)\nColumns: ['age', 'job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'day_of_week', 'campaign', 'pdays', 'previous', 'poutcome', 'emp.var.rate', 'cons.price.idx', 'cons.conf.idx', 'euribor3m', 'nr.employed']\n✅ Encoding complete on test data.\n✅ CSV file created successfully!\nFile preview:\n   predictions\n0            0\n1            0\n2            1\n3            0\n4            0\n\nNumber of predictions: 4119\n\n\n\n\nlabel_enc = LabelEncoder()\n\nfor col in data.select_dtypes(include=[\"object\"]).columns:\n    if col != \"y\":\n        data[col] = label_enc.fit_transform(data[col])\n\ndata[\"y\"] = data[\"y\"].map({\"yes\": 1, \"no\": 0})\n\nX = data.drop(\"y\", axis=1)\ny = data[\"y\"]\n\nprint(\"✅ Encoding complete.\")\nprint(\"Feature matrix shape:\", X.shape)\nprint(\"Target vector shape:\", y.shape)\n\n\nimport pandas as pd\npreds = pd.read_csv(\"https://raw.githubusercontent.com/byui-cse/cse450-course/master/data/bank.csv\")\nprint(preds[\"y\"].value_counts(normalize=True))\n\ny\nno     0.886482\nyes    0.113518\nName: proportion, dtype: float64\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Full_Stack/project2.html",
    "href": "Full_Stack/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 2"
    ]
  },
  {
    "objectID": "Full_Stack/project1.html",
    "href": "Full_Stack/project1.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "Full Stack",
      "Project 1"
    ]
  }
]